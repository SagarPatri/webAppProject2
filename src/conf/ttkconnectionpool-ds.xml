<?xml version="1.0" encoding="UTF-8"?>
<!-- The Hypersonic embedded database JCA connection factory config
$Id: hsqldb-ds.xml,v 1.15 2004/09/15 14:37:40 loubyansky Exp $ -->
<datasources>
	<no-tx-datasource>
		<!-- The jndi name of the DataSource, it is prefixed with java:/ -->
		<!-- Datasources are not available outside the virtual machine -->
		<jndi-name>TTKConnectionDataSource</jndi-name>
		<!-- for tcp connection, allowing other processes to use the hsqldb
      database. This requires the org.jboss.jdbc.HypersonicDatabase mbean.
      <connection-url>jdbc:hsqldb:hsql://localhost:1701</connection-url>
-->
		<!-- for totally in-memory db, not saved when jboss stops. 
      The org.jboss.jdbc.HypersonicDatabase mbean necessary
      <connection-url>jdbc:hsqldb:.</connection-url>
-->
		<!-- for in-process persistent db, saved when jboss stops. The
      org.jboss.jdbc.HypersonicDatabase mbean is necessary for properly db shutdown
-->
		<!-- Production Database on Report Server --> 
		<!--<connection-url>jdbc:oracle:oci8:@tipsrep</connection-url>-->
		<connection-url>jdbc:oracle:oci8:@tipsprd1</connection-url>
		<!--<connection-url>jdbc:oracle:oci8:@ttkuat</connection-url>-->
		<!--<connection-url>jdbc:oracle:oci8:@TIPSREPNEW</connection-url>-->
		<!-- The driver class -->
		<driver-class>oracle.jdbc.driver.OracleDriver</driver-class>
		<!-- The login and password -->
		<user-name>appln</user-name>
		<password>AXBNHAUZAUW</password>
		<!--example of how to specify class that determines if exception means connection should be destroyed-->
		<!--exception-sorter-class-name>org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter</exception-sorter-class-name-->
		<!-- this will be run before a managed connection is removed from the pool for use by a client-->
		<check-valid-connection-sql>commit</check-valid-connection-sql> 
		<!-- The minimum connections in a pool/sub-pool. Pools are lazily constructed on first use -->
		<min-pool-size>75</min-pool-size>
		<!-- The maximum connections in a pool/sub-pool -->
		<max-pool-size>150</max-pool-size>
              <blocking-timeout-millis>60000</blocking-timeout-millis>
		<!-- The time before an unused connection is destroyed -->
		<!-- NOTE: This is the check period. It will be destroyed somewhere between 1x and 2x this timeout after last use -->
		<!-- TEMPORARY FIX! - Disable idle connection removal, HSQLDB has a problem with not reaping threads on closed connections -->
		<idle-timeout-minutes>1</idle-timeout-minutes>
 		<prepared-statement-cache-size>10</prepared-statement-cache-size>
		<!-- sql to call when connection is created
        <new-connection-sql>some arbitrary sql</new-connection-sql>
      -->
		<!-- sql to call on an existing pooled connection when it is obtained from pool 
         <check-valid-connection-sql>some arbitrary sql</check-valid-connection-sql>
      -->
		<!-- example of how to specify a class that determines a connection is valid before it is handed out from the pool
         <valid-connection-checker-class-name>org.jboss.resource.adapter.jdbc.vendor.DummyValidConnectionChecker</valid-connection-checker-class-name>
      -->
		<!-- Whether to check all statements are closed when the connection is returned to the pool,
           this is a debugging feature that should be turned off in production -->
		<track-statements>true</track-statements>

		<!-- Use the getConnection(user, pw) for logins
        <application-managed-security/>
      -->
		<!-- Use the security domain defined in conf/login-config.xml -->
		<!--<security-domain>HsqlDbRealm</security-domain>-->
		<!-- Use the security domain defined in conf/login-config.xml or the
           getConnection(user, pw) for logins. The security domain takes precedence.
        <security-domain-and-application>HsqlDbRealm</security-domain-and-application>
      -->
		<!-- corresponding type-mapping in the standardjbosscmp-jdbc.xml (optional) -->
		<!--<metadata>
			<type-mapping>Hypersonic SQL</type-mapping>
		</metadata>-->
		<!-- This mbean can be used when using in process persistent hypersonic -->
		<!--<depends>jboss:service=Hypersonic,database=localDB</depends>-->
	</no-tx-datasource>
	<no-tx-datasource>
			<!-- The jndi name of the DataSource, it is prefixed with java:/ -->
			<!-- Datasources are not available outside the virtual machine -->
			<jndi-name>TTKEcardConnectionDataSource</jndi-name>
	
			<!-- Production Database on Report Server --> 
	
			<connection-url>jdbc:oracle:oci8:@ttkuat</connection-url> 
			<driver-class>oracle.jdbc.driver.OracleDriver</driver-class>
	
			<!-- The login and password -->
			<user-name>ecard</user-name>
			<password>46W56YBSSVR</password>
	
			<check-valid-connection-sql>commit</check-valid-connection-sql> 
			<!-- The minimum connections in a pool/sub-pool. Pools are lazily constructed on first use -->
			<min-pool-size>50</min-pool-size>
			<!-- The maximum connections in a pool/sub-pool -->
			<max-pool-size>100</max-pool-size>
			<blocking-timeout-millis>60000</blocking-timeout-millis>
	
			<idle-timeout-minutes>1</idle-timeout-minutes>
			<prepared-statement-cache-size>10</prepared-statement-cache-size>
	
			<!-- Whether to check all statements are closed when the connection is returned to the pool,
			 this is a debugging feature that should be turned off in production -->
			<track-statements>true</track-statements>
	</no-tx-datasource>
	<!-- This mbean should be used only when using tcp connections. Uncomment
   when the tcp based connection-url is used. 
   <mbean code="org.jboss.jdbc.HypersonicDatabase" 
     name="jboss:service=Hypersonic">
     <attribute name="Port">1701</attribute>
     <attribute name="Silent">true</attribute>
     <attribute name="Database">default</attribute>
     <attribute name="Trace">false</attribute>
     <attribute name="No_system_exit">true</attribute>
   </mbean>
 -->
	<!-- This mbean can be used when using in process persistent db -->
	<!--<mbean code="org.jboss.jdbc.HypersonicDatabase" name="jboss:service=Hypersonic,database=localDB">
		<attribute name="Database">localDB</attribute>
		<attribute name="InProcessMode">true</attribute>
	</mbean>-->
</datasources>
